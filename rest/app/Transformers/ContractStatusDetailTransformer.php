<?php

namespace App\Transformers;

use App\Models\ContractStatusDetail;
use League\Fractal\TransformerAbstract;
use App\Transformers\AttachmentTransformer;

class ContractStatusDetailTransformer extends TransformerAbstract
{
    /**
     * List of resources possible to include
     *
     * @var array
     */
    protected $availableIncludes = [
        'evidences'
    ];

    /**
     * Turn this item object into a generic array
     *
     * @param  \App\Models\ContractStatusDetail $contract
     * @return array
     */
    public function transform(ContractStatusDetail $detail)
    {
        return [
            'id' => $detail->id,
            'date' => $detail->created_at->valueOf(),
            'contract' => $detail->contract_id,
            'from' => (object) [
                'wallet' => $detail->contract_part,
                'name' => $detail->user ? $detail->user : null,
                'system' => $this->getSystem($detail)
            ],
            'message' => $detail->message,
            'proposal' => (object) [
                'proposal_part_a' => $detail->proposal_part_a,
                'proposal_part_b' => $detail->proposal_part_b
            ],
            'payed_at' => $detail->payed_at ? $detail->payed_at->valueOf() : null
        ];
    }

    /**
     * Include attachments
     *
     * @param  \App\Models\ContractStatusDetail $contract
     * @return \League\Fractal\Resource\Collection
     */
    public function includeEvidencess(ContractStatusDetail $detail)
    {
        $evidences = $detail->getMedia('evidences');

        return $this->collection($evidences, new AttachmentTransformer);
    }

    /**
     * Check if the activities has been generated by the system.
     *
     * @return boolean
     */
    protected function getSystem(ContractStatusDetail $detail)
    {
        $status = $detail->contract->status;
        if (in_array($status->code, [39,8])) {
            return true;
        }
        return false;
    }
}
