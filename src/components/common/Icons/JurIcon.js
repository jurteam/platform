import React from "react";
import "./Icons.scss";

const JurIconInCircle = () => (
  <svg
    width="28"
    height="28"
    viewBox="0 0 28 28"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g filter="url(#filter0_d)">
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M14 23.9265C19.4822 23.9265 23.9264 19.4822 23.9264 14C23.9264 8.51777 19.4822 4.07353 14 4.07353C8.51772 4.07353 4.07349 8.51777 4.07349 14C4.07349 19.4822 8.51772 23.9265 14 23.9265Z"
        fill="url(#paint0_linear)"
        fill-opacity="0.6"
        style={{ "mix-blend-mode": "overlay" }}
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M14 23.9265C19.4822 23.9265 23.9264 19.4822 23.9264 14C23.9264 8.51777 19.4822 4.07353 14 4.07353C8.51772 4.07353 4.07349 8.51777 4.07349 14C4.07349 19.4822 8.51772 23.9265 14 23.9265Z"
        stroke="url(#paint1_linear)"
      />
    </g>
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M14 23.9265C19.4822 23.9265 23.9264 19.4822 23.9264 14C23.9264 8.51777 19.4822 4.07353 14 4.07353C8.51772 4.07353 4.07349 8.51777 4.07349 14C4.07349 19.4822 8.51772 23.9265 14 23.9265Z"
      fill="white"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M12.3372 9.38752C12.3909 9.33359 12.4208 9.26029 12.4202 9.18403C12.4227 9.1072 12.3934 9.03278 12.3393 8.97843C12.2852 8.92408 12.2112 8.89463 12.1348 8.89709C11.9783 8.89992 11.8522 9.02674 11.8494 9.18403C11.8488 9.26029 11.8787 9.33359 11.9324 9.38752C11.986 9.44145 12.0589 9.47151 12.1348 9.47096C12.2107 9.47151 12.2836 9.44145 12.3372 9.38752ZM17.8343 15.7602L17.8342 15.7602C17.7903 15.5618 17.7465 15.3634 17.7135 15.1869C17.6123 14.8008 17.4876 14.4212 17.3402 14.0504C17.0975 13.4279 16.7843 12.8355 16.407 12.285C16.2973 12.1195 16.1882 11.9651 16.0667 11.8106C15.9459 11.6452 15.8252 11.5017 15.6935 11.3472C14.8993 10.4393 13.9325 9.70029 12.85 9.17364V9.19562C12.8472 9.39073 12.7683 9.57694 12.6303 9.71414C13.5899 10.1955 14.4532 10.85 15.1775 11.645C15.3093 11.7884 15.4293 11.9319 15.5508 12.0864L15.5912 12.1391C15.6897 12.2675 15.7947 12.4044 15.891 12.5497C16.2743 13.1103 16.5912 13.7139 16.8352 14.3483C16.9716 14.716 17.0853 15.0918 17.1754 15.4736C16.6569 15.7424 16.1075 15.9462 15.5396 16.0805C15.3534 16.1246 15.1663 16.1576 14.9688 16.1908C14.78 16.2243 14.5894 16.2464 14.3979 16.2569C14.2004 16.2679 14.0026 16.2789 13.805 16.2789C13.6075 16.2789 13.4208 16.2679 13.2342 16.2569L13.2342 16.2569C13.0428 16.2458 12.8522 16.2237 12.6633 16.1908C12.4658 16.1578 12.2791 16.1246 12.0925 16.0805C12.0595 16.2675 12.0265 16.4555 12.0046 16.6542C12.1644 16.692 12.3327 16.7217 12.4952 16.7503L12.5755 16.7645C12.7643 16.798 12.9549 16.8201 13.1463 16.8306L13.1469 16.8306H13.1469H13.1469H13.1469C13.3664 16.8416 13.5856 16.8526 13.805 16.8526C14.0356 16.8526 14.2661 16.8414 14.4858 16.8194C14.6772 16.8083 14.8677 16.7862 15.0566 16.7533C15.2542 16.7203 15.4408 16.6871 15.6275 16.643C16.2027 16.5026 16.7619 16.3029 17.2963 16.0471C17.4829 15.9588 17.6586 15.8595 17.8342 15.7602L17.8343 15.7608V15.7602ZM16.1136 15.3191L16.1136 15.3191C16.2445 15.2703 16.378 15.2206 16.5058 15.1643C15.983 13.3919 14.8757 11.8511 13.366 10.7956C13.3164 10.7644 13.2677 10.7333 13.2194 10.7024L13.2194 10.7024L13.2194 10.7024C13.0965 10.6239 12.9761 10.5469 12.85 10.4756C12.6961 10.6079 12.5425 10.7414 12.3998 10.8839C11.3472 11.923 10.56 13.2024 10.105 14.6133C9.81262 15.5298 9.66441 16.4866 9.66578 17.4491C9.66578 17.6675 9.67669 17.8869 9.68752 18.1045L9.68785 18.111C9.79096 18.0622 9.90321 18.0358 10.0172 18.0337C10.0993 18.0375 10.1805 18.0523 10.2587 18.0779C10.2478 17.8793 10.2368 17.6697 10.2368 17.46C10.2367 16.6004 10.3623 15.7453 10.6097 14.9224C11.0465 13.5058 11.8365 12.2251 12.9046 11.2021C14.3869 12.182 15.473 13.6612 15.9678 15.3739C16.0157 15.3556 16.0644 15.3375 16.1136 15.3191ZM15.6714 17.8337C16.8386 17.5961 17.947 17.1273 18.9321 16.4545C18.7604 16.3611 18.6393 16.1951 18.6024 16.0024C17.7165 16.603 16.7256 17.0298 15.6819 17.2602C15.0687 17.3934 14.443 17.46 13.8155 17.4588C12.9985 17.4581 12.1856 17.343 11.4002 17.1167C11.4871 15.3366 12.2035 13.6462 13.4204 12.3501C13.2815 12.2165 13.1349 12.0913 12.9813 11.9751C11.7235 13.3262 10.9674 15.072 10.8405 16.9181C10.8295 17.0948 10.8186 17.2822 10.8186 17.4698V17.525C11.0052 17.5911 11.203 17.6471 11.4006 17.7014C12.1881 17.9149 13.0003 18.0225 13.816 18.0213C14.4391 18.0212 15.0607 17.9583 15.6714 17.8337ZM19.5922 15.8442C19.5928 15.9205 19.5629 15.9938 19.5092 16.0477C19.4556 16.1017 19.3827 16.1317 19.3068 16.1312C19.1503 16.1283 19.0242 16.0015 19.0214 15.8442C19.0242 15.6869 19.1503 15.5601 19.3068 15.5573C19.4633 15.5601 19.5894 15.6869 19.5922 15.8442ZM10.0429 19.0716C10.1994 19.0687 10.3255 18.9419 10.3283 18.7846C10.3255 18.6273 10.1994 18.5005 10.0429 18.4977C9.96704 18.4972 9.89412 18.5272 9.84047 18.5811C9.78683 18.6351 9.75693 18.7084 9.75747 18.7846C9.75693 18.8609 9.78683 18.9342 9.84047 18.9881C9.89412 19.0421 9.96704 19.0721 10.0429 19.0716Z"
      fill="url(#paint2_linear)"
    />
    <defs>
      <filter
        id="filter0_d"
        x="0.0734863"
        y="0.0735321"
        width="27.8529"
        height="27.8529"
        filterUnits="userSpaceOnUse"
        color-interpolation-filters="sRGB"
      >
        <feFlood flood-opacity="0" result="BackgroundImageFix" />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
        />
        <feOffset />
        <feGaussianBlur stdDeviation="2" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0.307951 0 0 0 0 0.406119 0 0 0 0 0.754167 0 0 0 1 0"
        />
        <feBlend
          mode="normal"
          in2="BackgroundImageFix"
          result="effect1_dropShadow"
        />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="effect1_dropShadow"
          result="shape"
        />
      </filter>
      <linearGradient
        id="paint0_linear"
        x1="15.35"
        y1="-7.3022"
        x2="-7.40151"
        y2="12.5507"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#2574FB" />
        <stop offset="1" stop-color="#6A11CA" />
      </linearGradient>
      <linearGradient
        id="paint1_linear"
        x1="14"
        y1="-5.85294"
        x2="-5.85299"
        y2="14"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#3139EC" />
        <stop offset="1" stop-color="#FF0061" />
      </linearGradient>
      <linearGradient
        id="paint2_linear"
        x1="15.5271"
        y1="2.83622"
        x2="3.46095"
        y2="12.7174"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#2574FB" />
        <stop offset="1" stop-color="#6A11CA" />
      </linearGradient>
    </defs>
  </svg>
);

const JurIconFlat = ({ fill, ...rest }) => (
  <svg
    width="25"
    height="24"
    viewBox="0 0 25 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...rest}
  >
    <defs>
      <linearGradient
        id="purple-linear"
        x1="6.52708"
        y1="-5.16378"
        x2="-5.53905"
        y2="4.71738"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#2574FB" />
        <stop offset="1" stop-color="#6A11CA" />
      </linearGradient>
    </defs>
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M7.07972 1.35022C7.205 1.22427 7.27482 1.05309 7.27355 0.874977C7.27925 0.695558 7.21086 0.521761 7.0846 0.394827C6.95833 0.267893 6.78545 0.199138 6.60698 0.204877C6.2416 0.211469 5.94697 0.507656 5.94042 0.874977C5.93915 1.05309 6.00897 1.22427 6.13425 1.35022C6.25953 1.47617 6.42981 1.54636 6.60698 1.54508C6.78415 1.54636 6.95443 1.47617 7.07972 1.35022ZM19.9175 16.2326C19.815 15.7692 19.7122 15.306 19.6352 14.8939C19.3988 13.9921 19.1077 13.1056 18.7635 12.2396C18.1966 10.7859 17.4654 9.40259 16.5842 8.11682C16.3279 7.73044 16.0731 7.36973 15.7895 7.00901C15.5073 6.62264 15.2255 6.28759 14.9178 5.92687C13.0631 3.80656 10.8053 2.08065 8.27717 0.85074V0.902067C8.27077 1.35771 8.08657 1.79259 7.76425 2.113C10.0051 3.23709 12.0214 4.76552 13.7127 6.62216C14.0205 6.95721 14.3008 7.29226 14.5845 7.65298L14.6789 7.77621C14.9089 8.07602 15.1541 8.3957 15.3792 8.73512C16.2743 10.0441 17.0142 11.4538 17.584 12.9354C17.9027 13.794 18.1681 14.6718 18.3787 15.5635C17.1677 16.1911 15.8847 16.6671 14.5585 16.9807C14.1236 17.0838 13.6867 17.1608 13.2253 17.2383C12.7845 17.3166 12.3393 17.3682 11.8922 17.3927C11.4308 17.4184 10.969 17.4441 10.5076 17.4441C10.0462 17.4441 9.6103 17.4184 9.17443 17.3927C8.7275 17.3667 8.28241 17.3151 7.84131 17.2383C7.37991 17.1613 6.94405 17.0838 6.50818 16.9807C6.43112 17.4174 6.35406 17.8566 6.30301 18.3204C6.67602 18.4089 7.06921 18.4781 7.44856 18.5449L7.63614 18.578C8.07703 18.6563 8.52221 18.7079 8.96927 18.7325L8.97068 18.7325C9.48309 18.7582 9.99516 18.7838 10.5076 18.7838C11.046 18.7838 11.5845 18.7576 12.0974 18.7063C12.5443 18.6803 12.9894 18.6287 13.4305 18.5519C13.8919 18.4749 14.3278 18.3974 14.7636 18.2943C16.1069 17.9664 17.4129 17.5001 18.6609 16.9027C19.0967 16.6965 19.5072 16.4645 19.9175 16.2326ZM15.8988 15.2027C16.2046 15.0887 16.5165 14.9724 16.8149 14.8411C15.594 10.7018 13.008 7.10359 9.48219 4.63847C9.36644 4.56581 9.25276 4.49315 9.13998 4.42107C8.85298 4.23763 8.57173 4.05786 8.27717 3.89138C7.91789 4.20029 7.55908 4.51206 7.2258 4.84473C4.76768 7.27151 2.9292 10.2594 1.86681 13.5541C1.18389 15.6945 0.837767 17.929 0.840964 20.1767C0.840964 20.6868 0.86645 21.1992 0.891731 21.7074L0.892493 21.7227C1.13331 21.6086 1.39545 21.547 1.66164 21.5421C1.85338 21.5509 2.04308 21.5856 2.22562 21.6453C2.20009 21.1814 2.17457 20.6919 2.17457 20.2024C2.17426 18.1947 2.46766 16.1979 3.04535 14.276C4.06534 10.9678 5.91033 7.97697 8.40481 5.58802C11.8665 7.87635 14.403 11.3308 15.5583 15.3306C15.6701 15.2879 15.7843 15.2453 15.8988 15.2027ZM14.8662 21.075C17.592 20.5201 20.1806 19.4252 22.4811 17.8542C22.08 17.6359 21.7974 17.2484 21.711 16.7982C19.6422 18.201 17.3281 19.1977 14.8908 19.7357C13.4586 20.0468 11.9974 20.2023 10.5321 20.1995C8.62412 20.1979 6.72562 19.929 4.89141 19.4007C5.09436 15.2434 6.7675 11.2958 9.60936 8.2689C9.28493 7.95699 8.94255 7.66453 8.58398 7.39301C5.64652 10.5485 3.88078 14.6254 3.58428 18.9368C3.55875 19.3493 3.53322 19.787 3.53322 20.2252V20.354C3.96909 20.5085 4.43096 20.6391 4.89235 20.766C6.73148 21.2646 8.62826 21.5159 10.5331 21.5131C11.9884 21.5129 13.44 21.3661 14.8662 21.075ZM24.0227 16.4289C24.024 16.607 23.9542 16.7782 23.8289 16.9042C23.7036 17.0301 23.5333 17.1003 23.3562 17.099C22.9908 17.0924 22.6962 16.7962 22.6896 16.4289C22.6962 16.0616 22.9908 15.7654 23.3562 15.7588C23.7216 15.7654 24.0162 16.0616 24.0227 16.4289ZM1.72168 23.9659C2.08706 23.9593 2.38169 23.6631 2.38824 23.2958C2.38169 22.9285 2.08706 22.6323 1.72168 22.6257C1.54451 22.6244 1.37423 22.6946 1.24895 22.8205C1.12366 22.9465 1.05385 23.1177 1.05512 23.2958C1.05385 23.4739 1.12366 23.6451 1.24895 23.771C1.37423 23.897 1.54451 23.9672 1.72168 23.9659Z"
      fill={fill}
    />
  </svg>
);

const JurIconSystem = ({ className, ...rest }) => (
  <div className={`jur-system-icon ${className}`} {...rest}>
    <svg width="40" height="40" viewBox="0 0 40 40">
      <defs>
        <linearGradient
          x1="1.73646329%"
          y1="0%"
          x2="98.2635367%"
          y2="100%"
          id="linearGradient-1"
        >
          <stop stopColor="#32FBFC" offset="0%" />
          <stop stopColor="#147AFF" offset="100%" />
        </linearGradient>
      </defs>
      <g stroke="none" strokeWidth="1" fill="none">
        <circle id="Avatar-Copy" fill="#FFFFFF" cx="20" cy="20" r="20" />
        <path
          d="M36.0408602,25.5129963 C33.0129032,27.5753641 29.5376344,29.0533944 25.8215054,29.8095959 C23.9634409,30.1876967 22.0021505,30.3939335 20.0064516,30.3939335 C17.3913978,30.3939335 14.8451613,30.0502055 12.4365591,29.3971224 C11.8172043,29.2252584 11.1978495,29.0533944 10.6129032,28.8471576 L10.6129032,28.6752936 C10.6129032,28.0909561 10.6473118,27.5066185 10.6817204,26.9566538 C11.0946237,21.0101599 13.572043,15.6480035 17.3913978,11.5576407 C17.8731183,11.9357414 18.3548387,12.3138422 18.7677419,12.7263158 C15.0860215,16.6448146 12.711828,21.835107 12.4365591,27.5753641 C14.8451613,28.2628201 17.3913978,28.6409208 20.0064516,28.6409208 C22.0021505,28.6409208 23.9634409,28.4346841 25.855914,28.0222105 C29.1935484,27.3003818 32.2903226,25.9254699 35.0086022,24.1037116 C35.111828,24.6880492 35.4903226,25.2036411 36.0408602,25.5129963 Z M28.4365591,21.5601246 C27.8860215,21.8007342 27.3010753,22.006971 26.7505376,22.2132078 C25.2021505,16.8166786 21.7268817,12.2450966 17.1505376,9.22029045 C13.8473118,12.3825878 11.3354839,16.3354595 9.95913978,20.8039231 C9.20215054,23.3131373 8.78924731,25.9598427 8.78924731,28.7096664 C8.78924731,29.3627496 8.82365591,30.0158327 8.85806452,30.6345431 C8.89247312,30.6345431 8.41075269,30.4970519 8.10107527,30.4970519 C7.72258065,30.4970519 7.37849462,30.6001703 7.0688172,30.7376615 C7.0344086,30.0502055 7,29.3627496 7,28.6752936 C7,25.5817419 7.48172043,22.6256813 8.37634409,19.8414848 C9.82150538,15.4073939 12.2989247,11.4201495 15.5677419,8.22347933 C16.0150538,7.77663297 16.4967742,7.36415941 16.9784946,6.95168584 C17.5290323,7.26104101 18.0451613,7.60476899 18.5956989,7.94849696 C23.2408602,11.1795399 26.7849462,15.9573587 28.4365591,21.5601246 Z M32.6,23.4162557 C32.0494624,23.7256109 31.4989247,24.034966 30.9139785,24.3099484 C29.2623656,25.1005227 27.5075269,25.7192331 25.683871,26.1660794 C25.0989247,26.3035706 24.5139785,26.406689 23.8946237,26.5098074 C23.3096774,26.6129258 22.6903226,26.6816714 22.1053763,26.7160442 C21.4172043,26.7847898 20.6946237,26.8191626 19.972043,26.8191626 C19.283871,26.8191626 18.5956989,26.7847898 17.9075269,26.750417 C17.288172,26.7160442 16.7032258,26.6472986 16.1182796,26.5441802 C15.5333333,26.4410618 14.9139785,26.3379434 14.3290323,26.2004522 C14.3978495,25.5817419 14.5010753,24.9974043 14.6043011,24.4130668 C15.1892473,24.550558 15.7741935,24.6536764 16.3935484,24.7567948 C16.9784946,24.8599132 17.5978495,24.9286588 18.1827957,24.9630315 C18.7677419,24.9974043 19.3526882,25.0317771 19.972043,25.0317771 C20.5913978,25.0317771 21.2107527,24.9974043 21.8301075,24.9630315 C22.4494624,24.9286588 23.0344086,24.8599132 23.6193548,24.7567948 C24.2387097,24.6536764 24.8236559,24.550558 25.4086022,24.4130668 C27.1978495,24.0005932 28.9182796,23.3475101 30.5354839,22.522563 C30.2602151,21.3195151 29.8817204,20.1508399 29.4688172,19.0165376 C28.711828,17.0229154 27.6795699,15.1324116 26.5096774,13.4137717 C26.1655914,12.8981797 25.7870968,12.4169606 25.4430108,11.9701142 C25.0645161,11.4888951 24.6860215,11.0420487 24.2731183,10.5952023 C22.0021505,8.12036094 19.3182796,6.09236591 16.2903226,4.57996284 C16.7032258,4.16748927 16.9784946,3.58315172 16.9784946,2.96444137 C16.9784946,2.93006857 16.9784946,2.89569578 16.9784946,2.89569578 C20.3849462,4.54559004 23.4129032,6.84856745 25.8903226,9.66713682 C26.3032258,10.148356 26.6817204,10.5952023 27.0602151,11.1107943 C27.4387097,11.5920135 27.7827957,12.0732326 28.1268817,12.5888246 C29.2967742,14.3074644 30.2946237,16.1292227 31.0516129,18.0884721 C31.4989247,19.2227744 31.911828,20.4258223 32.2215054,21.6288702 C32.3247312,22.178835 32.4623656,22.7975453 32.6,23.4162557 Z M15.5677419,2.89569578 C15.5677419,3.41128773 15.1548387,3.7893885 14.6731183,3.7893885 C14.1569892,3.7893885 13.7784946,3.37691494 13.7784946,2.89569578 C13.7784946,2.41447662 14.1913978,2.00200305 14.6731183,2.00200305 C15.1548387,1.96763025 15.5677419,2.38010382 15.5677419,2.89569578 Z M38.0709677,23.5193741 C38.0709677,24.034966 37.6580645,24.4130668 37.1763441,24.4130668 C36.6946237,24.4130668 36.2817204,24.0005932 36.2817204,23.5193741 C36.2817204,23.0381549 36.6946237,22.6256813 37.1763441,22.6256813 C37.6580645,22.6256813 38.0709677,23.0381549 38.0709677,23.5193741 Z M8.96129032,32.7312837 C8.96129032,33.2125029 8.5483871,33.6249764 8.06666667,33.6249764 C7.55053763,33.6249764 7.17204301,33.2125029 7.17204301,32.7312837 C7.17204301,32.2156917 7.58494624,31.837591 8.06666667,31.837591 C8.5483871,31.837591 8.96129032,32.2500645 8.96129032,32.7312837 Z"
          fill="url(#linearGradient-1)"
          opacity="0.9"
        />
      </g>
    </svg>
  </div>
);

export const JurIcon = ({ fill, circle, ...rest }) => {
  if (circle) return <JurIconInCircle {...rest} />;

  return fill === "system" ? (
    <JurIconSystem {...rest} />
  ) : (
    <JurIconFlat fill={fill} {...rest} />
  );
};

JurIcon.defaultProps = {
  fill: "system"
};
